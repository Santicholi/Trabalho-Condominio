/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.MensalidadeController;
import Controller.ResidenciaController;
import Model.Mensalidade;
import View.TelaCadastroMensalidade;
import java.awt.Color;
import java.awt.Component;
import java.sql.Date;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


public class TelaListaMensalidade extends javax.swing.JFrame {
    private MensalidadeController controller;

    public TelaListaMensalidade() throws SQLException {
        initComponents();
        controller = new MensalidadeController();
        carregarTabelaMensalidades();
    }

    
    private void carregarTabelaMensalidades() throws SQLException {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        
        DefaultTableModel model = (DefaultTableModel) tabelaMensalidades.getModel();
        model.setRowCount(0);

        ArrayList<Mensalidade> lista = controller.listarTodas();

        for (Mensalidade m : lista) {
            model.addRow(new Object[]{
                m.getCodigo_mensalidade(),
                m.getResidencia(),
                m.getMesReferencia(),
                m.getValor(),
                m.getDataVencimento() != null ? sdf.format(m.getDataVencimento()) : "",
                m.getDataPagamento() != null ? sdf.format(m.getDataPagamento()) : ""
            });
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaMensalidades = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campo_numeroCasa = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();
        campo_codigoMensalidade = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_alterar = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        btn_adicionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabelaMensalidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Num Casa", "Mensalidade", "Valor", "Vencimento", "Data Pagamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaMensalidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMensalidadesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaMensalidades);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mensalidades", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Numero da casa");

        campo_numeroCasa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btn_buscar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        campo_codigoMensalidade.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("ID mensalidade");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_numeroCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_codigoMensalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campo_numeroCasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(campo_codigoMensalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        btn_alterar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_alterar.setText("Alterar");
        btn_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alterarActionPerformed(evt);
            }
        });

        btn_excluir.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        btn_adicionar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_adicionar.setText("Adicionar");
        btn_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_adicionar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_adicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .addComponent(btn_excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_alterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaMensalidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMensalidadesMouseClicked

    }//GEN-LAST:event_tabelaMensalidadesMouseClicked

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed

    String numeroCasa = campo_numeroCasa.getText().trim();
    String idMensalidade = campo_codigoMensalidade.getText().trim();

    ArrayList<Mensalidade> resultado = controller.buscarMensalidades(numeroCasa, idMensalidade);

    DefaultTableModel model = (DefaultTableModel) tabelaMensalidades.getModel();
    model.setRowCount(0);

    for (Mensalidade m : resultado) {
        model.addRow(new Object[] {
            m.getCodigo_mensalidade(),
            m.getResidencia(),
            m.getMesReferencia(),
            m.getValor(),
            m.getDataVencimento(),
            m.getDataPagamento() != null ? m.getDataPagamento() : ""
        });
    }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adicionarActionPerformed
        
        
        TelaCadastroMensalidade telaCadastro = new TelaCadastroMensalidade();
        telaCadastro.setVisible(true);

        telaCadastro.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                try {
                    carregarTabelaMensalidades(); // Atualiza a tabela após cadastro
                } catch (SQLException ex) {
                    Logger.getLogger(TelaListaMensalidade.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
    }//GEN-LAST:event_btn_adicionarActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        int linhaSelecionada = tabelaMensalidades.getSelectedRow();

        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma mensalidade para excluir.");
            return;
        }

        int codigoMensalidade = (int) tabelaMensalidades.getValueAt(linhaSelecionada, 0);
        int confirmacao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir esta mensalidade?", "Confirmação", JOptionPane.YES_NO_OPTION);

        if (confirmacao == JOptionPane.YES_OPTION) {
            try {
                if (controller == null) {
                    controller = new MensalidadeController();
                }
                
                boolean sucesso = controller.deletar(codigoMensalidade);
                if (sucesso) {
                    JOptionPane.showMessageDialog(this, "Morador excluído com sucesso.");
                    btn_buscarActionPerformed(null); // Atualiza a tabela
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir morador.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(TelaListaMensalidade.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_excluirActionPerformed

    private void btn_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alterarActionPerformed
    int linhaSelecionada = tabelaMensalidades.getSelectedRow();

    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecione uma linha");
        return;
    }

    try {
        // Obtém os dados da linha selecionada
        int codigo = (int) tabelaMensalidades.getValueAt(linhaSelecionada, 0);
        int residencia = (int) tabelaMensalidades.getValueAt(linhaSelecionada, 1);
        String mesReferencia = (String) tabelaMensalidades.getValueAt(linhaSelecionada, 2);
        double valor = (double) tabelaMensalidades.getValueAt(linhaSelecionada, 3);

        // Conversão de data
        String strDataVencimento = tabelaMensalidades.getValueAt(linhaSelecionada, 4).toString();
        String strDataPagamento = tabelaMensalidades.getValueAt(linhaSelecionada, 5) != null
            ? tabelaMensalidades.getValueAt(linhaSelecionada, 5).toString()
            : null;

        // Converte String para java.util.Date
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        java.util.Date dataUtilVencimento = formato.parse(strDataVencimento);
        java.sql.Date dataVencimento = new java.sql.Date(dataUtilVencimento.getTime());
        
        java.sql.Date dataPagamento = null;
        if (strDataPagamento != null && !strDataPagamento.isEmpty()) {
            java.util.Date dataUtilPagamento = formato.parse(strDataPagamento);
            dataPagamento = new java.sql.Date(dataUtilPagamento.getTime());
        }

        // Cria o objeto Mensalidade
        Mensalidade mensalidade = new Mensalidade();
        mensalidade.setCodigo_mensalidade(codigo);
        mensalidade.setResidencia(residencia);
        mensalidade.setMesReferencia(mesReferencia);
        mensalidade.setValor(valor);
        mensalidade.setDataVencimento(dataVencimento);
        mensalidade.setDataPagamento(dataPagamento);

        // Abre a tela de edição
        TelaCadastroMensalidade telaEdicao = new TelaCadastroMensalidade();
        telaEdicao.carregarDadosParaEdicao(mensalidade);
        telaEdicao.setVisible(true);

        telaEdicao.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                try {
                    carregarTabelaMensalidades();
                } catch (SQLException ex) {
                    Logger.getLogger(TelaListaMensalidade.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

    } catch (ParseException ex) {
        JOptionPane.showMessageDialog(this, "Erro ao converter datas: " + ex.getMessage());
    }
    }//GEN-LAST:event_btn_alterarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaListaMensalidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaListaMensalidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaListaMensalidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaListaMensalidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaListaMensalidade().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaListaMensalidade.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_adicionar;
    private javax.swing.JButton btn_alterar;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JTextField campo_codigoMensalidade;
    private javax.swing.JTextField campo_numeroCasa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaMensalidades;
    // End of variables declaration//GEN-END:variables
}
